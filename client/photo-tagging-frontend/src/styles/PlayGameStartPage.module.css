.container {
  max-width: 900px;
  margin: 0 auto;
  padding: 2rem;
  opacity: 0;
  transform: translateY(20px);
  transition: opacity var(--transition-slow), transform var(--transition-slow);
}

.visible {
  opacity: 1;
  transform: translateY(0);
}

.title {
  font-size: 2.8rem;
  font-weight: 700;
  color: var(--text-primary);
  margin-bottom: 2rem;
  text-align: center;
  background: linear-gradient(120deg, var(--primary-color), var(--accent-color));
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  display: inline-block;
  margin: 0 auto 2rem;
  width: 100%;
}

.gameSetupWrapper {
  display: grid;
  grid-template-columns: 1fr;
  gap: 2rem;
}

.section {
  margin-bottom: 1rem;
  background-color: var(--secondary-bg);
  border-radius: var(--radius-lg);
  padding: 2rem;
  box-shadow: var(--shadow-md);
  transition: transform var(--transition-normal), box-shadow var(--transition-normal);
}

.section:hover {
  box-shadow: var(--shadow-lg);
}

.sectionTitle {
  font-size: 1.8rem;
  margin-bottom: 1.5rem;
  color: var(--text-primary);
  border-bottom: 2px solid var(--primary-color);
  padding-bottom: 0.5rem;
  position: relative;
}

.sectionTitle::after {
  content: '';
  position: absolute;
  bottom: -2px;
  left: 0;
  width: 60px;
  height: 3px;
  background-color: var(--accent-color);
  border-radius: 1.5px;
}

/* Player Name Section */
.playerSection {
  background: linear-gradient(to bottom right, var(--secondary-bg), white);
}

.nameInputContainer {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.inputGroup {
  display: flex;
  gap: 1rem;
}

.nameInput {
  flex: 1;
  padding: 1rem 1.2rem;
  font-size: 1.1rem;
  border: 2px solid #e0e0e0;
  border-radius: var(--radius-md);
  transition: all var(--transition-normal);
  box-shadow: var(--shadow-sm);
  background-color: white;
  color: var(--text-primary);
}

.nameInput:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(106, 76, 147, 0.2);
  transform: translateY(-2px);
}

.nameInput::placeholder {
  color: var(--text-muted);
}

.guestButton {
  padding: 0.8rem 1.5rem;
  background-color: transparent;
  color: var(--text-secondary);
  border: 2px solid var(--text-secondary);
  border-radius: var(--radius-md);
  cursor: pointer;
  transition: all var(--transition-normal);
  font-weight: bold;
  box-shadow: var(--shadow-sm);
}

.guestButton:hover {
  background-color: var(--text-secondary);
  color: white;
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

.playerConfirmation {
  margin-top: 0.5rem;
  padding: 0.5rem 1rem;
  background-color: rgba(106, 76, 147, 0.1);
  border-left: 3px solid var(--primary-color);
  border-radius: 0 var(--radius-md) var(--radius-md) 0;
  color: var(--text-secondary);
}

/* Map Selection Section */
.mapSection {
  background: linear-gradient(to bottom right, var(--secondary-bg), white);
}

/* Loading Text */
.loadingText {
  text-align: center;
  font-size: 1.2rem;
  color: var(--text-secondary);
  padding: 2rem 0;
}

/* Difficulty Selection */
.difficultyOptions {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 1.5rem;
  margin-top: 1.5rem;
}

.difficultyCard {
  border: 3px solid transparent;
  border-radius: var(--radius-lg);
  overflow: hidden;
  cursor: pointer;
  transition: all var(--transition-normal);
  background-color: white;
  box-shadow: var(--shadow-sm);
  position: relative;
}

.difficultyCard:hover {
  transform: translateY(-5px);
  box-shadow: var(--shadow-md);
}

.selected {
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(106, 76, 147, 0.3);
}

.cardImageContainer {
  position: relative;
  overflow: hidden;
  height: 180px;
}

.cardImage {
  width: 100%;
  height: 100%;
  object-fit: cover;
  transition: transform var(--transition-normal);
}

.difficultyCard:hover .cardImage {
  transform: scale(1.05);
}

.selectedOverlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(106, 76, 147, 0.4);
  display: flex;
  justify-content: center;
  align-items: center;
  animation: fadeIn 0.3s ease-in-out;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

.checkmark {
  background-color: var(--primary-color);
  color: white;
  width: 40px;
  height: 40px;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 1.5rem;
  box-shadow: var(--shadow-md);
  animation: scaleIn 0.3s ease-in-out;
}

@keyframes scaleIn {
  from { transform: scale(0); }
  to { transform: scale(1); }
}

.cardContent {
  padding: 1.5rem;
  background-color: white;
}

.cardTitle {
  font-size: 1.5rem;
  margin-bottom: 0.8rem;
  color: var(--text-primary);
}

.difficultyBadge {
  display: inline-block;
  padding: 0.3rem 0.8rem;
  border-radius: var(--radius-sm);
  font-size: 0.9rem;
  font-weight: 600;
  margin-bottom: 1rem;
  color: white;
}

.difficultyBadge[data-difficulty="easy"] {
  background-color: #4caf50;
}

.difficultyBadge[data-difficulty="medium"] {
  background-color: #ff9800;
}

.difficultyBadge[data-difficulty="hard"] {
  background-color: #f44336;
}

.cardInfo {
  display: flex;
  justify-content: space-between;
  font-size: 0.9rem;
  color: var(--text-muted);
  margin-top: 0.5rem;
  border-top: 1px solid #f0f0f0;
  padding-top: 0.8rem;
}

/* Start Game Button */
.startButtonContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin-top: 2rem;
}

.startButton {
  padding: 1rem 3rem;
  font-size: 1.3rem;
  background: linear-gradient(135deg, var(--accent-color), var(--accent-dark));
  color: white;
  border: none;
  border-radius: var(--radius-md);
  cursor: pointer;
  transition: all var(--transition-normal);
  font-weight: bold;
  box-shadow: 0 4px 15px rgba(255, 107, 107, 0.4);
  position: relative;
  overflow: hidden;
  display: flex;
  align-items: center;
  gap: 0.8rem;
  min-width: 250px;
  justify-content: center;
}

.startButton::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    90deg,
    transparent,
    rgba(255, 255, 255, 0.2),
    transparent
  );
  transition: all 0.6s;
}

.startButtonEnabled:hover::before {
  left: 100%;
}

.startButton:hover:not(:disabled) {
  background: linear-gradient(135deg, var(--accent-dark), var(--accent-color));
  transform: translateY(-5px);
  box-shadow: 0 8px 25px rgba(255, 107, 107, 0.6);
}

.startButton:active:not(:disabled) {
  transform: translateY(-2px);
}

.startButton:disabled {
  background: linear-gradient(135deg, #cccccc, #aaaaaa);
  cursor: not-allowed;
  opacity: 0.7;
  box-shadow: none;
}

.buttonText {
  position: relative;
  z-index: 2;
}

.buttonIcon {
  font-size: 1rem;
  position: relative;
  z-index: 2;
}

.startButtonHint {
  margin-top: 1rem;
  color: var(--text-muted);
  font-size: 0.9rem;
  font-style: italic;
}

/* Error Message */
.errorMessage {
  background-color: rgba(var(--error), 0.1);
  border-left: 4px solid var(--error);
  padding: 1rem;
  margin: 1rem 0;
  border-radius: 0 var(--radius-md) var(--radius-md) 0;
}

.retryButton {
  background-color: var(--accent-color);
  color: white;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: var(--radius-md);
  cursor: pointer;
  margin-top: 0.5rem;
  font-weight: bold;
  transition: background-color var(--transition-normal);
}

.retryButton:hover {
  background-color: var(--accent-dark);
}

@media (max-width: 768px) {
  .container {
    padding: 1rem;
  }
  
  .inputGroup {
    flex-direction: column;
  }
  
  .difficultyOptions {
    grid-template-columns: 1fr;
  }

  .title {
    font-size: 2.2rem;
  }

  .startButton {
    width: 100%;
  }
} 